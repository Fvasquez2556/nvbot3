#!/usr/bin/env python3
"""
üß™ Prueba de las 3 correcciones cr√≠ticas implementadas (con codificaci√≥n UTF-8)
"""

import sys
import os
from pathlib import Path

# Agregar directorios al path
sys.path.insert(0, str(Path('scripts')))
sys.path.insert(0, str(Path('src')))

print("üß™ PROBANDO LAS 3 CORRECCIONES CR√çTICAS")
print("=" * 50)

# Test 1: Verificar que fix_training_data.py funciona
print("\n1Ô∏è‚É£ Probando fix_training_data.py...")
try:
    with open('scripts/fix_training_data.py', 'r', encoding='utf-8') as f:
        content = f.read()
        exec(content)
    print("‚úÖ Script de completar datos: CARGA CORRECTAMENTE")
except Exception as e:
    print(f"‚ùå Error en fix_training_data.py: {e}")

# Test 2: Verificar que verify_dual_strategy_data.py funciona  
print("\n2Ô∏è‚É£ Probando verify_dual_strategy_data.py...")
try:
    with open('scripts/verify_dual_strategy_data.py', 'r', encoding='utf-8') as f:
        content = f.read()
        exec(content)
    print("‚úÖ Verificador combinado: CARGA CORRECTAMENTE")
except Exception as e:
    print(f"‚ùå Error en verify_dual_strategy_data.py: {e}")

# Test 3: Verificar importaci√≥n de clases espec√≠ficas
print("\n3Ô∏è‚É£ Probando importaciones de clases...")
try:
    # Ejecutar verify_dual_strategy_data para definir las clases
    with open('scripts/verify_dual_strategy_data.py', 'r', encoding='utf-8') as f:
        content = f.read()
        # Remover el main() para evitar ejecuci√≥n autom√°tica
        content = content.replace('if __name__ == "__main__":', 'if False:')
        exec(content, globals())
    
    # Probar que DualStrategyVerifier existe
    verifier = DualStrategyVerifier(validation_mode='flexible')
    print("‚úÖ Clase DualStrategyVerifier: IMPORTACI√ìN EXITOSA")
    
    # Probar m√©todos b√°sicos
    result = verifier.verify_training_data_files()
    print(f"‚úÖ M√©todo verify_training_data_files: FUNCIONA (resultado: {result})")
    
except Exception as e:
    print(f"‚ùå Error probando clases: {e}")

# Test 4: Verificar que download_training_data_only.py funciona
print("\n4Ô∏è‚É£ Probando download_training_data_only.py...")
try:
    with open('scripts/download_training_data_only.py', 'r', encoding='utf-8') as f:
        content = f.read()
        # Reemplazar el main() para evitar descarga autom√°tica
        content = content.replace('if __name__ == "__main__":', 'if False:')
        exec(content, globals())
    
    # Probar que TrainingDataDownloader existe
    downloader = TrainingDataDownloader()
    print("‚úÖ Clase TrainingDataDownloader: IMPORTACI√ìN EXITOSA")
    
except Exception as e:
    print(f"‚ùå Error en download_training_data_only.py: {e}")

print("\n" + "=" * 50)
print("üéØ RESULTADO: Probando compatibilidad entre las 3 correcciones")
print("üìã Si todos los tests pasan, las correcciones est√°n funcionando")
